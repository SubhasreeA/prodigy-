<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      background-color: #222;
      color: #fff;
      font-family: 'Segoe UI', sans-serif;
      text-align: center;
      margin: 0;
      padding: 0;
    }

    h1 {
      margin-top: 30px;
      color: #00ffff;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 10px;
      margin: 30px auto;
      width: max-content;
    }

    .cell {
      width: 100px;
      height: 100px;
      background-color: #444;
      font-size: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      border-radius: 8px;
      transition: background 0.3s;
    }

    .cell:hover {
      background-color: #555;
    }

    #status {
      font-size: 1.2rem;
      margin-bottom: 20px;
    }

    button {
      padding: 10px 20px;
      font-size: 1rem;
      background-color: #00ffff;
      color: #000;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #00cccc;
    }
  </style>
</head>
<body>

  <h1>ðŸŽ® Tic Tac Toe</h1>
  <div id="status">Player X's Turn</div>

  <div class="board" id="board">
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
    <div class="cell" onclick="makeMove(this)"></div>
  </div>

  <button onclick="resetGame()">Restart Game</button>

  <script>
    let currentPlayer = "X";
    let gameOver = false;

    function makeMove(cell) {
      if (cell.textContent !== "" || gameOver) return;

      cell.textContent = currentPlayer;
      if (checkWinner()) {
        document.getElementById("status").textContent = `ðŸŽ‰ Player ${currentPlayer} Wins!`;
        gameOver = true;
        return;
      }

      if (isDraw()) {
        document.getElementById("status").textContent = "It's a Draw!";
        gameOver = true;
        return;
      }

      currentPlayer = currentPlayer === "X" ? "O" : "X";
      document.getElementById("status").textContent = `Player ${currentPlayer}'s Turn`;
    }

    function checkWinner() {
      const cells = document.querySelectorAll(".cell");
      const winningCombos = [
        [0,1,2], [3,4,5], [6,7,8], // rows
        [0,3,6], [1,4,7], [2,5,8], // columns
        [0,4,8], [2,4,6]           // diagonals
      ];

      return winningCombos.some(combo => {
        const [a, b, c] = combo;
        return cells[a].textContent &&
               cells[a].textContent === cells[b].textContent &&
               cells[a].textContent === cells[c].textContent;
      });
    }

    function isDraw() {
      const cells = document.querySelectorAll(".cell");
      return [...cells].every(cell => cell.textContent !== "");
    }

    function resetGame() {
      const cells = document.querySelectorAll(".cell");
      cells.forEach(cell => cell.textContent = "");
      currentPlayer = "X";
      gameOver = false;
      document.getElementById("status").textContent = "Player X's Turn";
    }
  </script>

</body>
</html>
